import { PropType } from 'vue';
import { MouseEventHandler } from '../types';
export declare const Toolbar: import("vue").DefineComponent<{
    zoomIn: {
        type: PropType<MouseEventHandler>;
        default: () => void;
    };
    zoomOut: {
        type: PropType<MouseEventHandler>;
        default: () => void;
    };
    rotateLeft: {
        type: PropType<MouseEventHandler>;
        default: () => void;
    };
    rotateRight: {
        type: PropType<MouseEventHandler>;
        default: () => void;
    };
    resize: {
        type: PropType<MouseEventHandler>;
        default: () => void;
    };
    rotateDisabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    zoomDisabled: {
        type: BooleanConstructor;
        default: boolean;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    zoomIn: {
        type: PropType<MouseEventHandler>;
        default: () => void;
    };
    zoomOut: {
        type: PropType<MouseEventHandler>;
        default: () => void;
    };
    rotateLeft: {
        type: PropType<MouseEventHandler>;
        default: () => void;
    };
    rotateRight: {
        type: PropType<MouseEventHandler>;
        default: () => void;
    };
    resize: {
        type: PropType<MouseEventHandler>;
        default: () => void;
    };
    rotateDisabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    zoomDisabled: {
        type: BooleanConstructor;
        default: boolean;
    };
}>>, {
    resize: MouseEventHandler;
    zoomIn: MouseEventHandler;
    zoomOut: MouseEventHandler;
    rotateLeft: MouseEventHandler;
    rotateRight: MouseEventHandler;
    rotateDisabled: boolean;
    zoomDisabled: boolean;
}>;
